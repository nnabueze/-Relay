pipeline {
    agent any
    stages {
        stage('Build Application') {
            steps {
                echo 'Starts building of project'
                sh 'dotnet restore Relay/Relay.csproj'
                sh 'dotnet build Relay/Relay.csproj -c Release -o Build'
                sh 'dotnet publish Relay/Relay.csproj -c Release -o Output'
            }
        }
        stage('Archive Artifects'){
            steps{
                archiveArtifacts artifacts: 'Output/*', followSymlinks: false, onlyIfSuccessful: true
            }
        }
        stage('Test') {
            steps {
                echo 'Testing project'
                sh 'dotnet test --logger Relay/Relay.csproj --configuration Release --no-restore'
            }
        }
        stage('Deploy'){
            steps{
                ftpPublisher alwaysPublishFromMaster: false, 
                continueOnError: false, 
                failOnError: false, 
                masterNodeName: '',
                paramPublish: null,
                publishers: [[configName: 'localtest', transfers: [[asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: 'Output', sourceFiles: 'Output/*']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false]]
            }

        }
    }
}